<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-26T20:53:14 IST" name="Default suite" finished-at="2022-01-26T20:53:16 IST" duration-ms="2571">
    <groups>
    </groups>
    <test started-at="2022-01-26T20:53:14 IST" name="Default test" finished-at="2022-01-26T20:53:16 IST" duration-ms="2571">
      <class name="log4jConceptAndExtentReports.GenerateReportONTEST">
        <test-method is-config="true" signature="startReport()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:14 IST" name="startReport" finished-at="2022-01-26T20:53:16 IST" duration-ms="2456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="testcase1()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="testcase1" finished-at="2022-01-26T20:53:16 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at log4jConceptAndExtentReports.GenerateReportONTEST.testcase1(GenerateReportONTEST.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase1 -->
        <test-method is-config="true" signature="MonitorResult(org.testng.ITestResult)[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="MonitorResult" finished-at="2022-01-26T20:53:16 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcase1 status=FAILURE method=GenerateReportONTEST.testcase1()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MonitorResult -->
        <test-method signature="testcase2()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="testcase2" finished-at="2022-01-26T20:53:16 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase2 -->
        <test-method is-config="true" signature="MonitorResult(org.testng.ITestResult)[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="MonitorResult" finished-at="2022-01-26T20:53:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcase2 status=SUCCESS method=GenerateReportONTEST.testcase2()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MonitorResult -->
        <test-method signature="testcase3()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="testcase3" finished-at="2022-01-26T20:53:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase3 -->
        <test-method is-config="true" signature="MonitorResult(org.testng.ITestResult)[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="MonitorResult" finished-at="2022-01-26T20:53:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcase3 status=SUCCESS method=GenerateReportONTEST.testcase3()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MonitorResult -->
        <test-method signature="testcase4()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="testcase4" finished-at="2022-01-26T20:53:16 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at log4jConceptAndExtentReports.GenerateReportONTEST.testcase4(GenerateReportONTEST.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase4 -->
        <test-method signature="testcase5()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="testcase5" finished-at="2022-01-26T20:53:16 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcase5 -->
        <test-method is-config="true" signature="MonitorResult(org.testng.ITestResult)[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="MonitorResult" finished-at="2022-01-26T20:53:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcase4 status=FAILURE method=GenerateReportONTEST.testcase4()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MonitorResult -->
        <test-method is-config="true" signature="MonitorResult(org.testng.ITestResult)[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="MonitorResult" finished-at="2022-01-26T20:53:16 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcase5 status=SUCCESS method=GenerateReportONTEST.testcase5()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MonitorResult -->
        <test-method is-config="true" signature="end()[pri:0, instance:log4jConceptAndExtentReports.GenerateReportONTEST@7d900ecf]" started-at="2022-01-26T20:53:16 IST" name="end" finished-at="2022-01-26T20:53:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- log4jConceptAndExtentReports.GenerateReportONTEST -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
